

CoordMode, Pixel, Screen
currentBank :=0 ;0 gold :1 sc

lastpixline:=[]
colors:={}

colors.insert("black" , { R:0, g:0, b:0})
colors.insert("white" , { R:255, g:255, b:255})
distances:={}

;; get bankclick loc from saved data
KeyWait, RButton,D
MouseGetPos, bankx,banky

;timed check
  
    ;; get bankclick loc from saved data
    KeyWait, RButton,D
    MouseGetPos, bankx,banky
loop 2 
{
    
    
  
    readbank:
        x:=bankx
        y:=banky
        pixline:=[]
        pixline2:=[]
        pixCount:=0
        
        ;move to safe read start
        Loop { ;till we hit 1st black
            PixelGetColor col, x++, y
            pixCount+=1
            MouseMove, x,y,20
            
        } until (col == 0X000000) or (pixCount > 100)
        pixCount:=0
        Loop { ;till we hit first none black
            PixelGetColor col, x++, y
            pixCount+=1
            MouseMove, x,y,20
            tooltip 2 %x% - %y%
        } until (col != 0X000000) or (pixCount > 100)
        
        
        
        Loop 100 { ;smaller capture width - needle
            vred := (col & 0xFF)
            vgreen := ((col & 0xFF00) >> 8)
            vblue := ((col & 0xFF0000) >> 16)
            col:=[vred,vgreen,vblue]
            pixline.=dist2(col)
            PixelGetColor col, x++, y
            MouseMove, x,y,20
            tooltip 3 %vred% - %vgreen% - %vblue%
        } 
        
        ; Loop 160 { ;rest of bank text - haystack
        ; ; vred := (col & 0xFF)
        ; ; vgreen := ((col & 0xFF00) >> 8)
        ; ; vblue := ((col & 0xFF0000) >> 16)
        ; vgreen := (col & 0xFF)
        ; vblue := ((col & 0xFF00) >> 8)
        ; vred := ((col & 0xFF0000) >> 16)
        ; col:=[vred,vblue,vgreen]
        ; pixline2.=dist2(col)
        ; PixelGetColor col, x++, y
        ; MouseMove, x,y,20
        ; tooltip 4 %vred% - %vgreen% - %vblue%
        ; } 
        
        dist2(col)
        {
            distances:={}
            colors:={} 
            colors.insert("black" , { R:0, g:0, b:0} )
            colors.insert("white" , { R:255, g:255, b:255})
            
            for stockcolour, v in colors { 
                ret :=mathdist(v,col) 
                st = %stockcolour%
                distances.insert(stockcolour,ret)
                ;msgbox storing st %stockcolour% %ret% 
            }
            
            mincolor := ""
            minval := 2**30 
            for key,val in distances 
            {
                Send {Space}%pixline%
                if (val < minval) {
                    ; msgbox smaller %key% - v %val% minval := %minval%
                    minval := val
                    mincolor = %key% 
                    markAs = 1
                }
                Else
                {
                    ; msgbox larger %key% - v %val% minval := %minval%
                    markAs = 0
                }
            }
            string = %string%%markAs%
            ; msgbox closest color is %mincolor%
            return string 
        }
        
        mathdist(v,vCol) {
            a:= (v["R"]-vCol[1])**2
            b:=(v["G"]-vCol[2])**2
            c:=(v["B"]-vCol[3])**2
            return Sqrt(a +b +c)
        } 
        msgbox % instr(lastpixline,pixline)
        lastpixline:=pixline
        msgbox %lastpixline%
        ; if (instr(lastpixline,pixline)) 
        ;     return true 
        ; else
        ;     return false
    }
    
    
    ; SetTitleMatchMode, 2
    ; WinActivate, Notepad ;
    ; sleep 100
    ; Send {Enter}%pixline%
    ; Send {Enter}%pixline2%{enter}
    
    esc::
        ExitApp, 
    return